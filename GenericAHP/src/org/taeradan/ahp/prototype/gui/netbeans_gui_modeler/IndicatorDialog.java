/* Copyright 2009-2010 Yves Dubromelle @ LSIS(www.lsis.org)
 *
 * This file is part of JenericAHP.
 *
 * JenericAHP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JenericAHP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JenericAHP.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.taeradan.ahp.prototype.gui.netbeans_gui_modeler;

import org.taeradan.ahp.Indicator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Dialog used to configure an Indicator's information
 *
 * @author Yves Dubromelle
 * @author Jean-Pierre PRUNARET
 */
public final class IndicatorDialog
	extends JDialog {

	private static final long serialVersionUID = 1L;
	private final transient Indicator indicator;

	/**
	 * Creates new form IndicatorDialog
	 */
	public IndicatorDialog(final Frame parent, final boolean modal,
			       final Indicator indicator) {
		super(parent, modal);
		this.indicator = indicator;
		initComponents();
		jTextFieldId.setText(indicator.getIdentifier());
		jTextFieldName.setText(indicator.getName());
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	private void initComponents() {

		jTextFieldId = new JTextField();
		jLabelId = new JLabel();
		jLabelName = new JLabel();
		jTextFieldName = new JTextField();
		jButtonSave = new JButton();
		jButtonReload = new JButton();

		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Indicator properties");
		setResizable(false);

		jLabelId.setText("ID");

		jLabelName.setText("Name");

		jButtonSave.setText("Save");
		jButtonSave.addActionListener(evt -> jButtonSaveActionPerformed());

		jButtonReload.setText("Reload");
		jButtonReload.addActionListener(evt -> jButtonReloadActionPerformed());

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
								.addComponent(jLabelId)
								.addComponent(jLabelName))
							.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
								.addComponent(jTextFieldId,
									GroupLayout.DEFAULT_SIZE,
									272,
									Short.MAX_VALUE)
								.addComponent(jTextFieldName,
									GroupLayout.DEFAULT_SIZE,
									272,
									Short.MAX_VALUE)))
						.addGroup(GroupLayout.Alignment.TRAILING,
							layout.createSequentialGroup()
								.addComponent(jButtonSave)
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButtonReload)))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
						.addComponent(jLabelId)
						.addComponent(jTextFieldId,
							GroupLayout.PREFERRED_SIZE,
							GroupLayout.DEFAULT_SIZE,
							GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
						.addComponent(jLabelName)
						.addComponent(jTextFieldName,
							GroupLayout.PREFERRED_SIZE,
							GroupLayout.DEFAULT_SIZE,
							GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
						.addComponent(jButtonReload)
						.addComponent(jButtonSave))
					.addContainerGap())
		);

		pack();
	}

	private void jButtonSaveActionPerformed() {
		indicator.setIdentifier(jTextFieldId.getText());
		indicator.setName(jTextFieldName.getText());
		this.dispose();
	}

	private void jButtonReloadActionPerformed() {
		jTextFieldId.setText(indicator.getIdentifier());
		jTextFieldName.setText(indicator.getName());
	}

	private JButton jButtonReload;
	private JButton jButtonSave;
	private JLabel jLabelId;
	private JLabel jLabelName;
	private JTextField jTextFieldId;
	private JTextField jTextFieldName;
}
